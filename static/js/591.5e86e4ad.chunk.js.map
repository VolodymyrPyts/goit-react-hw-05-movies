{"version":3,"file":"static/js/591.5e86e4ad.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","Pages/PageStyled/MoviesPage.styled.js","Pages/MoviesPage.jsx","Services/Api.js","components/MovieItem/MovieItem.styled.js","components/MovieItem/MovieItem.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { MdManageSearch } from \"react-icons/md\";\n\nexport const SearcHeader = styled.header`\n    top: 0;\n    left: 0;\n    position: sticky;\n    z-index: 1100;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 64px;\n    padding-right: 24px;\n    padding-left: 24px;\n    padding-top: 12px;\n    padding-bottom: 12px;\n    color: #fff;\n    background-color: #3f51b5;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`\n\n\nexport const SearchForm = styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    border: 1px solid orangered;\n    margin-top: 16px;\n    margin-left: 32px;\n    `\n\n\nexport const SearchButton = styled.button`\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    &:hover {\n         opacity: 1;\n    }\n`\n\nexport const SearchIcon = styled(MdManageSearch)`\nwidth: 24px;\nheight: 48px;\nfill: orangered;\n`\n\n\nexport const SearchLabel = styled.span`\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    border: 0;\n    `\n\n\nexport const Input = styled.input`\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n    &::placeholder {\n    font: inherit;\n    font-size: 18px;\n    }\n`","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport {\n  SearchForm,\n  SearchButton,\n  SearchIcon,\n  SearchLabel,\n  Input,\n} from './SearchBar.styled';\n\nconst SearchBar = ({ handleSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const onSearchSubmit = e => {\n    handleSubmit(value);\n\n    if (value === '') {\n      Notify.warning('Input is still empty, please type something!', {\n        width: '400px',\n        fontSize: '20px',\n        position: 'center-top',\n        distance: '50px',\n      });\n      return;\n    }\n    setValue('');\n  };\n\n  return (\n    <SearchForm onSubmit={onSearchSubmit}>\n      <SearchButton type=\"submit\">\n        <SearchLabel>\n          <SearchIcon />\n        </SearchLabel>\n      </SearchButton>\n\n      <Input\n        name=\"query\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        onChange={e => setValue(e.currentTarget.value)}\n        value={value}\n      />\n    </SearchForm>\n  );\n};\n\nexport default SearchBar;\n\nSearchBar.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.p`\ndisplay: block;\nfont-size: 24px;\npadding-left: 32px;\nmargin-top: 32px;\n`","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport MovieItem from 'components/MovieItem/MovieItem';\nimport { getSearchedMovies } from '../Services/Api';\nimport { Message } from './PageStyled/MoviesPage.styled';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n    async function getMovies() {\n      try {\n        const data = await getSearchedMovies(query);\n        setMovies(data.results);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getMovies();\n  }, [query]);\n\n  const onFormSubmit = (e, query) => {\n    e.preventDefault();\n    const nextQuery = query !== '' ? { query } : {};\n    setSearchParams({ nextQuery });\n    setMovies([]);\n  };\n\n  return (\n    <div>\n      <SearchBar handleSubmit={onFormSubmit} />\n      {movies?.length > 0 && <MovieItem movies={movies} />}\n\n      {movies?.length === 0 && query !== '' && (\n        <Message>\n          Sorry, there is no films for your results! Try to find something else!\n        </Message>\n      )}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst _KEY = 'f70abac86533d424df79b342ee8b9ff4';\n\nexport const getTrendMovies = async() => {\n  try {\n      const response = await axios.get(`/trending/movie/week?api_key=${_KEY}`); \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n\n\nexport const getSearchedMovies = async(query) => {\n  try {\n      const response = await axios.get(`/search/movie?api_key=${_KEY}&language=en-US&query=${query}&include_adult=false`);       \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n\nexport const getMovieDetails = async(movieId) => {\n  try {\n      const response = await axios.get(`/movie/${movieId}?api_key=${_KEY}&language=en-US`); \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n\nexport const getMovieCredits = async(movieId) => {\n  try {\n      const response = await axios.get(`/movie/${movieId}/credits?api_key=${_KEY}&language=en-US`); \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n\nexport const getMovieRewiews = async(movieId) => {\n  try {\n      const response = await axios.get(`/movie/${movieId}/reviews?api_key=${_KEY}&language=en-US`); \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nmargin-top: 32px;\n  display: flex;\n  flex-wrap: wrap; \n  gap: 16px;\n    \n`;\n\nexport const Wrapper = styled.div`\nmargin-bottom: 16px;\nflex-basis: calc((100% - 48px) / 3);\nborder: 1px solid grey;\nborder-radius: 4px;\ncursor: pointer;\ntransition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  &:focus {\n      box-shadow: 1px 4px 6px rgba(0, 0, 0, 0.16), 0px 4px 4px rgba(0, 0, 0, 0.06),\n          0px 1px 1px rgba(0, 0, 0, 0.12);\n      transform: scale(1.03);\n  }\n> a {\n  text-decoration: none;\n}\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;","import { PropTypes } from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Container, Wrapper, MovieName } from './MovieItem.styled';\n\nconst MovieItem = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      {movies.map(({ poster_path, id, title }) => (\n        <Wrapper key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n              alt={title}\n            />\n            <MovieName>{title}</MovieName>\n          </Link>\n        </Wrapper>\n      ))}\n    </Container>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};\n"],"names":["SearchForm","styled","SearchButton","SearchIcon","MdManageSearch","SearchLabel","Input","handleSubmit","useState","value","setValue","onSubmit","e","Notify","width","fontSize","position","distance","type","name","autoComplete","autoFocus","placeholder","onChange","currentTarget","Message","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getSearchedMovies","data","results","console","log","getMovies","preventDefault","nextQuery","length","MovieItem","axios","_KEY","getTrendMovies","response","getMovieDetails","movieId","getMovieCredits","getMovieRewiews","Container","Wrapper","MovieName","location","useLocation","map","poster_path","id","title","to","state","from","src","alt"],"sourceRoot":""}