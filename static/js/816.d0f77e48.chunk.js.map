{"version":3,"file":"static/js/816.d0f77e48.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAO,mCAEAC,EAAc,mCAAG,6GAEDF,IAAAA,IAAA,uCAA0CC,IAFzC,cAElBE,EAFkB,yBAGjBA,EAASC,MAHQ,gCAMxBC,QAAQC,IAAR,MANwB,yDAAH,qDAWdC,EAAiB,mCAAG,WAAMC,GAAN,gGAEJR,IAAAA,IAAA,gCAAmCC,EAAnC,iCAAgEO,EAAhE,yBAFI,cAErBL,EAFqB,yBAGpBA,EAASC,MAHW,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDAUjBG,EAAe,mCAAG,WAAMC,GAAN,gGAEFV,IAAAA,IAAA,iBAAoBU,EAApB,oBAAuCT,EAAvC,oBAFE,cAEnBE,EAFmB,yBAGlBA,EAASC,MAHS,gCAMzBC,QAAQC,IAAR,MANyB,yDAAH,sDAUfK,EAAe,mCAAG,WAAMD,GAAN,gGAEFV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,oBAFE,cAEnBE,EAFmB,yBAGlBA,EAASC,MAHS,gCAMzBC,QAAQC,IAAR,MANyB,yDAAH,sDAUfM,EAAe,mCAAG,WAAMF,GAAN,gGAEFV,IAAAA,IAAA,iBAAoBU,EAApB,4BAA+CT,EAA/C,oBAFE,cAEnBE,EAFmB,yBAGlBA,EAASC,MAHS,gCAMzBC,QAAQC,IAAR,MANyB,yDAAH,qD,yKC5CfO,EAAiBC,EAAAA,GAAAA,IAAH,+FAMdC,EAAaD,EAAAA,GAAAA,IAAH,sDAIVE,EAAUF,EAAAA,GAAAA,EAAH,+EAKPG,EAASH,EAAAA,GAAAA,EAAH,4G,SCInB,EAboB,SAAC,GAAiB,IAAfI,EAAc,EAAdA,QACrB,OACE,SAACL,EAAD,UACGK,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,eAAgBC,EAA5B,EAA4BA,GAA5B,OACX,UAACP,EAAD,YACE,UAACE,EAAD,sBAAiBI,EAAeE,aAChC,UAACP,EAAD,eAAWI,EAAX,SAFeE,EADN,KAQlB,ECjBYE,EAAmBV,EAAAA,GAAAA,IAAH,0DCiC7B,EA7BgB,WACd,IAAQQ,GAAOG,EAAAA,EAAAA,MAAPH,GACR,GAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOR,EAAP,KAAgBS,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAEuBhB,EAAAA,EAAAA,IAAgBU,GAFvC,cAEUlB,EAFV,OAGUc,EAAUd,EAAKyB,QACrBF,EAAWT,GAJf,mDAOIb,QAAQC,IAAR,MAPJ,0DADc,uBAAC,WAAD,wBAWdwB,EACD,GAAE,CAACR,KAGF,SAACE,EAAD,UACGN,EAAQa,OAAS,GAChB,SAAC,EAAD,CAAab,QAASA,IAEtB,qCAIP,C","sources":["Services/Api.js","components/Reviews/ReviewsList/ReviewsList.styled.js","components/Reviews/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst _KEY = 'f70abac86533d424df79b342ee8b9ff4';\n\nexport const getTrendMovies = async() => {\n  try {\n      const response = await axios.get(`/trending/movie/week?api_key=${_KEY}`); \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n\n\nexport const getSearchedMovies = async(query) => {\n  try {\n      const response = await axios.get(`/search/movie?api_key=${_KEY}&language=en-US&query=${query}&include_adult=false`);       \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n\nexport const getMovieDetails = async(movieId) => {\n  try {\n      const response = await axios.get(`/movie/${movieId}?api_key=${_KEY}&language=en-US`); \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n\nexport const getMovieCredits = async(movieId) => {\n  try {\n      const response = await axios.get(`/movie/${movieId}/credits?api_key=${_KEY}&language=en-US`); \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n\nexport const getMovieRewiews = async(movieId) => {\n  try {\n      const response = await axios.get(`/movie/${movieId}/reviews?api_key=${_KEY}&language=en-US`); \n      return response.data;\n  }\n  catch (error) {\n      console.log(error);\n  }\n};\n","import styled from \"styled-components\";\n\nexport const ReviewsWrapper = styled.div`\ndisplay: grid;\ngap: 16px;\n grid-template-columns: repeat(auto-fit);\n`\n\nexport const ReviewCard = styled.div`\ndisplay: block;\nwidth: 100%\n`\nexport const Content = styled.p`\nfont-style: italic;\nfont-size: 24px;\npadding: 16px;\n`\nexport const Author = styled.p`\nfont-size: 24px;\npadding: 8px;\nfont-weight: 500;\nborder-bottom: 1px solid grey;\n`","import { PropTypes } from 'prop-types';\nimport {\n  ReviewsWrapper,\n  ReviewCard,\n  Content,\n  Author,\n} from './ReviewsList.styled';\n\nconst ReviewsList = ({ reviews }) => {\n  return (\n    <ReviewsWrapper>\n      {reviews.map(({ content, author_details, id }) => (\n        <ReviewCard key={id}>\n          <Author>author: {author_details.username}</Author>\n          <Content>\"{content}\"</Content>\n        </ReviewCard>\n      ))}\n    </ReviewsWrapper>\n  );\n};\n\nexport default ReviewsList;\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      content: PropTypes.string,\n      author_details: PropTypes.shape({\n        username: PropTypes.string,\n      }),\n      id: PropTypes.string,\n    })\n  ).isRequired,\n};","import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.div`\npadding: 32px;\nfont-size: 24px;\n`","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieRewiews } from '../../Services/Api';\nimport ReviewsList from './ReviewsList/ReviewsList';\nimport { ReviewsContainer } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function getReviews() {\n      try {\n        const data = await getMovieRewiews(id);\n        const reviews = data.results;\n        setReviews(reviews);\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getReviews();\n  }, [id]);\n\n  return (\n    <ReviewsContainer>\n      {reviews.length > 0 ? (\n        <ReviewsList reviews={reviews} />\n      ) : (\n        'We have no reviews for this movie'\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;"],"names":["axios","_KEY","getTrendMovies","response","data","console","log","getSearchedMovies","query","getMovieDetails","movieId","getMovieCredits","getMovieRewiews","ReviewsWrapper","styled","ReviewCard","Content","Author","reviews","map","content","author_details","id","username","ReviewsContainer","useParams","useState","setReviews","useEffect","results","getReviews","length"],"sourceRoot":""}